{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from random import randint\n",
    "\n",
    "random_num = randint(1,101)\n",
    "\n",
    "print('''Lars' lustiges Zahlenratespiel! \n",
    "\n",
    "Du musst eine zufällig generierte Zahl erraten. Dabei kriegst Du folgende Hilfestellungen:\n",
    "1. Die Zahl liegt zwischen 1 und 100.\n",
    "2. Wenn Deine Zahl beim ersten Versuch sehr nah dran ist, erscheint \"WARM!\", wenn sie weit weg ist, erscheint \"KALT!\".\n",
    "3. Ab dem zweiten Versuch erscheint \"KÄLTER!\" oder \"WÄRMER!\" je nachdem, ob Du dich entfernt oder angenähert hast.\n",
    "4. Wenn Du richtig liegst, ist das Spiel beendet. Gewinnen tust Du leider nichts. ¯\\_(ツ)_/¯\n",
    "''')\n",
    "\n",
    "guess_list = []\n",
    "\n",
    "while len(guess_list) == 0:\n",
    "    user_num = int(input('Gib eine Zahl ein:'))\n",
    "    guess_list.append(user_num)\n",
    "    \n",
    "    if user_num == random_num:\n",
    "        print('Korrekt! Du hast {} Versuch gebraucht!'.format(len(guess_list)))\n",
    "        break\n",
    "    elif user_num < 1 or user_num > 100:\n",
    "        print('DU DUMMKOPF! Eine Zahl zwischen 1 und 100 hab ich gesagt!!!')\n",
    "    elif abs(random_num - user_num) <= 10:\n",
    "        print('WARM!') \n",
    "    elif abs(random_num - user_num) >= 10:\n",
    "        print('KALT!')\n",
    "        pass\n",
    "\n",
    "while len(guess_list) > 0:\n",
    "    user_num = int(input('Gib eine Zahl ein:'))\n",
    "    guess_list.append(user_num)\n",
    "    \n",
    "    if user_num == random_num:\n",
    "        print('Korrekt! Du hast {} Versuche gebraucht!'.format(len(guess_list)))\n",
    "        break\n",
    "    elif user_num < 1 or user_num > 100:\n",
    "        print('DU DUMMKOPF! Eine Zahl zwischen 1 und 100 hab ich gesagt!!!')\n",
    "    elif abs(random_num - user_num) == abs(random_num - guess_list[-2]):\n",
    "        print('¯\\_(ツ)_/¯')\n",
    "    elif abs(random_num - user_num) < abs(random_num - guess_list[-2]):\n",
    "        print('WÄRMER!')\n",
    "    elif abs(random_num - user_num) > abs(random_num - guess_list[-2]):\n",
    "        print('KÄLTER!')\n",
    "\n",
    "        \n",
    "        \n",
    "        \n",
    "        \n",
    "        \n",
    "        \n",
    "        \n",
    "        \n",
    "        \n",
    "        \n",
    "        \n",
    "        \n",
    "        \n",
    "        \n",
    "        \n",
    "        \n",
    "        \n",
    "        \n",
    "        \n",
    "        \n",
    "        \n",
    "        \n",
    "        \n",
    "        \n",
    "        \n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "7"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
